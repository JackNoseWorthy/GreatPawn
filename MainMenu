import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Button;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import org.eclipse.osgi.container.Module.Settings;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.wb.swt.SWTResourceManager;
import org.eclipse.swt.widgets.Combo;

public class MainMenu
{

	protected Shell shell;

	/**
	 * Launch the application.
	 * @param args
	 */
	public static void main(String[] args) 
	{
		try {
			MainMenu window = new MainMenu();
			window.open();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Open the window.
	 */
	
	public void open()
	{
		Display display = Display.getDefault();
		createContents();
		shell.open();
		shell.layout();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) {
				display.sleep();
			}
		}
	}

	/**
	 * Create contents of the window.
	 */
	
	protected void createContents()
	{
		
		int location = 0;
		//location will represent the place wher the gui is currently at
		//0 - main menu, 1 - play, 2 singleplay
		shell = new Shell();
		shell.setBackground(SWTResourceManager.getColor(SWT.COLOR_LIST_BACKGROUND));
		shell.setImage(SWTResourceManager.getImage(MainMenu.class, "/com/sun/java/swing/plaf/motif/icons/DesktopIcon.gif"));
		shell.setSize(450, 300);
		shell.setLocation(650, 300);
		shell.setText("Great Pawn");
		
		Button play = new Button(shell, SWT.NONE);
		play.setBounds(153, 10, 105, 47);
		play.setText("Play");
		
		Button lessons = new Button(shell, SWT.NONE);
		lessons.setText("Lessons");
		lessons.setBounds(153, 72, 105, 47);
		
		Button achievements = new Button(shell, SWT.NONE);
		achievements.setText("Achievements");
		achievements.setBounds(153, 139, 105, 47);
		
		Button gameSet = new Button(shell, SWT.NONE);
		gameSet.setText("Settings");
		gameSet.setBounds(153, 204, 105, 47);
		
		Button quit = new Button(shell, SWT.NONE);
		quit.setBounds(399, 236, 35, 25);
		quit.setText("Quit");
		
		Button onePlayer = new Button(shell, SWT.NONE);
		onePlayer.setBounds(153, 43, 105, 62);
		onePlayer.setText("One Player");
		onePlayer.setVisible(false);
		
		
		Button twoPlayer = new Button(shell, SWT.NONE);
		twoPlayer.setText("Two Player");
		twoPlayer.setBounds(153, 136, 105, 62);
		twoPlayer.setVisible(false);
		
		Button back = new Button(shell, SWT.NONE);
		back.setText("Back");
		back.setBounds(0, 236, 35, 25);
		back.setVisible(false);
		
		Combo lessonsDropDown = new Combo(shell, SWT.NONE);
		lessonsDropDown.setBounds(132, 64, 142, 47);
		lessonsDropDown.setText("Lessons\r\n");
		lessonsDropDown.setVisible(false);
		
		
		
		Combo endGames = new Combo(shell, SWT.NONE);
		endGames.setBounds(150, 139, 108, 23);
		endGames.setText("EndGame");
		endGames.setVisible(false);
		
	

		
		play.addSelectionListener(new SelectionAdapter()
		{
			@Override
			public void widgetSelected(SelectionEvent e)
			{
				onePlayer.setVisible(true);
				twoPlayer.setVisible(true);
				back.setVisible(true);

				play.setVisible(false);
				lessons.setVisible(false);
				achievements.setVisible(false);
				gameSet.setVisible(false);
								
			}
		});
		
		
		lessons.addSelectionListener(new SelectionAdapter() 
		{
			@Override
			public void widgetSelected(SelectionEvent e) 
			{
				back.setVisible(true);
				lessonsDropDown.setVisible(true);
				endGames.setVisible(true);
				
				lessons.setVisible(false);
				play.setVisible(false);
				gameSet.setVisible(false);
				achievements.setVisible(false);
				gameSet.setVisible(false);
			}
		});
		
	
		achievements.addSelectionListener(new SelectionAdapter()
		{
			@Override
			public void widgetSelected(SelectionEvent e) 
			{
				back.setVisible(true);

				play.setVisible(false);
				lessons.setVisible(false);
				achievements.setVisible(false);
				gameSet.setVisible(false);
				
				
			}
		});
		
		gameSet.addSelectionListener(new SelectionAdapter()
		{
			@Override
			public void widgetSelected(SelectionEvent e) 
			{
				back.setVisible(true);

				play.setVisible(false);
				lessons.setVisible(false);
				achievements.setVisible(false);
				gameSet.setVisible(false);
				
				
			}
		});
		
		
		quit.addSelectionListener(new SelectionAdapter() 
		{
			@Override
			public void widgetSelected(SelectionEvent e) 
			{
				System.exit(1);
			}
		});
	
		onePlayer.addSelectionListener(new SelectionAdapter() 
		{
			public void widgetSelected(SelectionEvent e) 
			{
				System.out.println("jack sucks in singleplayer");
				System.exit(1);
			}
		});
		
		twoPlayer.addSelectionListener(new SelectionAdapter() 
		{
			public void widgetSelected(SelectionEvent e) 
			{
				System.out.println("jack will get shit on by ai");
				System.exit(1);
			}
		});
		
	}
}
